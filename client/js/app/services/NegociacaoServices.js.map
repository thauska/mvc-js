{"version":3,"sources":["../../app-es6/services/NegociacaoServices.js"],"names":["HttpService","ConnectionFactory","NegociacaoDao","Negociacao","NegociacaoServices","_http","get","then","negociacoes","map","objeto","Date","data","quantidade","valor","catch","console","log","error","Error","Promise","all","obterNegociacaoSemana","obterNegociacaoSemanaAnterior","obterNegociacaoSemanaRetrasada","periodos","reduce","dados","periodo","concat","dado","erro","negociacao","getConnection","connection","dao","adiciona","listaTodos","apagaTodos","listaAtual","obterNegociacoes","filter","some","isEquals","negociacaoExistente"],"mappings":"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","file":"NegociacaoServices.js","sourcesContent":["import { HttpService } from './HttpService'\r\nimport { ConnectionFactory } from './ConnectionFactory'\r\nimport { NegociacaoDao } from '../dao/NegociacaoDao'\r\nimport { Negociacao } from '../models/Negociacao'\r\n\r\nexport class NegociacaoServices {\r\n\r\n  constructor() {\r\n    this._http = new HttpService()\r\n  }\r\n  \r\n  obterNegociacaoSemana() {\r\n    return this._http\r\n      .get('negociacoes/semana')\r\n      .then(negociacoes => {\r\n        return negociacoes.map((objeto) => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor))\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n        throw new Error('Não foi possível obter as negociações da semana')\r\n      })\r\n  }\r\n\r\n  obterNegociacaoSemanaAnterior() {\r\n      \r\n    return this._http\r\n      .get('negociacoes/anterior')\r\n      .then(negociacoes => {\r\n        return negociacoes.map((objeto) => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor))\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n        throw new Error('Não foi possível obter as negociações da semana anterior')\r\n      })\r\n  }\r\n\r\n  obterNegociacaoSemanaRetrasada() {\r\n\r\n    return this._http\r\n      .get('negociacoes/retrasada')\r\n      .then(negociacoes => {\r\n        return negociacoes.map((objeto) => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor))\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n        throw new Error('Não foi possível obter as negociações da semana retrasada')\r\n      })\r\n\r\n  }\r\n\r\n  obterNegociacoes() {\r\n        \r\n    return Promise\r\n      .all([\r\n        this.obterNegociacaoSemana(),\r\n        this.obterNegociacaoSemanaAnterior(),\r\n        this.obterNegociacaoSemanaRetrasada()\r\n      ])\r\n      .then(periodos => {\r\n        let negociacoes = periodos\r\n            .reduce((dados, periodo) => dados.concat(periodo), [])\r\n            .map(dado => new Negociacao(new Date(dado.data), dado.quantidade, dado.valor ))\r\n        return negociacoes\r\n      })\r\n      .catch(erro => {\r\n        throw new Error(erro)\r\n      })\r\n  }\r\n  \r\n  cadastra(negociacao) {\r\n    \r\n    return ConnectionFactory\r\n      .getConnection()\r\n      .then(connection => new NegociacaoDao(connection))\r\n      .then(dao => dao.adiciona(negociacao))\r\n      .then(() => 'Negociação adicionada com sucesso')\r\n      .catch(erro => {\r\n        console.log(erro)\r\n        throw new Error('Não foi possível adicionar a negociação')\r\n      })\r\n\r\n  }\r\n\r\n  lista() {\r\n        \r\n    return ConnectionFactory\r\n      .getConnection()\r\n      .then(connection => new NegociacaoDao(connection))\r\n      .then(dao => dao.listaTodos())\r\n      .catch(erro => {\r\n        console.log(erro);\r\n        throw new Error('Não foi possível obter as negociações')\r\n      })\r\n  \r\n  }\r\n\r\n  apaga() {\r\n    \r\n    return ConnectionFactory\r\n      .getConnection()\r\n      .then(connection => new NegociacaoDao(connection))\r\n      .then(dao => dao.apagaTodos())\r\n      .then(() => 'Negociações apagadas com sucesso!')\r\n      .catch(erro => {\r\n        console.log(erro);\r\n        throw new Error('Não foi apagar as negociações')\r\n      })\r\n\r\n  }\r\n\r\n  importa(listaAtual) {\r\n\r\n    return this.obterNegociacoes()\r\n      .then(negociacoes => negociacoes.filter(negociacao =>\r\n        !listaAtual.some(negociacaoExistente =>\r\n          negociacao.isEquals(negociacaoExistente)))\r\n      )\r\n      .catch(erro => {\r\n        console.log(erro)\r\n        throw new Error(\"Não foi possível importar as negociações\")\r\n      })\r\n  }\r\n  \r\n}\r\n"]}